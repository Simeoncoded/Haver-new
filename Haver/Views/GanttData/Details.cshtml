@model haver.ViewModels.GanttDetailsViewModel

@{
    ViewData["Title"] = "Gantt Data Details";
}

@if (TempData["Message"] != null)
{
    <div id="autoDismissAlert" class="alert alert-success alert-dismissible fade show mb-4" role="alert">
        <i class="fas fa-check-circle"></i>
        @TempData["Message"]

        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>


}

<div class="modal fade" id="confirmGanttModal" tabindex="-1" aria-labelledby="ganttModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="ganttActionForm" method="post">
        <input type="hidden" name="id" id="ganttIdInput" />
        <div class="modal-header">
          <h5 class="modal-title" id="ganttModalLabel">Confirm Action</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body" id="ganttModalBody">
          <!-- Filled dynamically -->
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn" id="ganttConfirmBtn">Confirm</button>
        </div>
      </form>
    </div>
  </div>
</div>


<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            @if (User.IsInRole("Admin") || User.IsInRole("Engineering") || User.IsInRole("Production") || User.IsInRole("PIC"))
				{
            @if (!Model.GanttData.IsFinalized)
            {
                <a asp-action="Edit" asp-route-id="@Model.GanttData.ID" class="btn">Edit</a>
                <form asp-action="FinalizeGantt" method="post" style="display:inline;">
                    <input type="hidden" name="id" value="@Model.GanttData.ID" />
                   <button type="button"
        class="btn me-2"
        data-bs-toggle="modal"
        data-bs-target="#confirmGanttModal"
        data-action="finalize"
        data-id="@Model.GanttData.ID">
    Finalize
</button>
                </form>
            }
            else
            {
                <span class="badge bg-success">Finalized</span>
                <form asp-action="UnfinalizeGantt" method="post" style="display:inline;">
                    <input type="hidden" name="id" value="@Model.GanttData.ID" />
                    <button type="button"
        class="btn btn-secondary"
        data-bs-toggle="modal"
        data-bs-target="#confirmGanttModal"
        data-action="unfinalize"
        data-id="@Model.GanttData.ID">
    Unfinalize
</button>
                </form>
            }
                }


            <button href="#" onclick="printPrintableArea()" return false;" class="ms-3 btn btn-sm "> <i class="fa-solid fa-print"></i> Print</button>
            <a asp-action="Index" class="btn">Back to List</a>
        </div>


    </div>

    <div id="printableArea">
    <div class="info-container opts">
        <div class="info-box p-3 bg-light border rounded mb-3">
            <dl class="row">
                <!-- Machine Information -->
                <dt class="col-md-3">Machine & Serial Number</dt>
                <dd class="col-md-3">
                        <a href="@Url.Action("Index", "MachineProcurement", new { MachineID = Model.GanttData.Machine.ID })"
                           data-bs-toggle="tooltip" title="View Machine Details" target="_blank">
                            @Model.GanttData.Machine.Description
                        </a>


                    </dd>

                <dt class="col-md-3">Order Number</dt>
                <dd class="col-md-3">
                        <a href="@Url.Action("Details", "SalesOrder", new { id = Model.GanttData.Machine.SalesOrder.ID })"
                           data-bs-toggle="tooltip" title="View Sales Order Details" target="_blank">
                            @Model.GanttData.Machine.SalesOrder.OrderNumber
                        </a>
                    </dd>

                <dt class="col-md-3">Customer</dt>
                <dd class="col-md-3">@Model.GanttData.Machine.SalesOrder.CompanyName</dd>

                    <dt class="col-md-3">Approval Drawings Due</dt>
                    <dd class="col-md-3">
                        @(Model.GanttData.AppDExp.HasValue ? Model.GanttData.AppDExp.Value.ToString("MMM dd, yyyy") : "N/A")
                    </dd>

                    <dt class="col-md-3">Approval Drawings Released</dt>
                    <dd class="col-md-3">
                        @(Model.GanttData.AppDRcd.HasValue ? Model.GanttData.AppDRcd.Value.ToString("MMM dd, yyyy") : "N/A")
                    </dd>

                    <dt class="col-md-3">Engineering Package Due</dt>
                    <dd class="col-md-3">
                        @(Model.GanttData.EngExpected.HasValue ? Model.GanttData.EngExpected.Value.ToString("MMM dd, yyyy") : "N/A")
                    </dd>

                    <dt class="col-md-3">Engineering Package Released</dt>
                    <dd class="col-md-3">
                        @(Model.GanttData.EngReleased.HasValue ? Model.GanttData.EngReleased.Value.ToString("MMM dd, yyyy") : "N/A")
                    </dd>

                    <dt class="col-md-3">Purchase Orders Due</dt>
                    <dd class="col-md-3">
                        @(Model.GanttData.PurchaseOrdersIssued.HasValue ? Model.GanttData.PurchaseOrdersIssued.Value.ToString("MMM dd, yyyy") : "N/A")
                    </dd>

                    <dt class="col-md-3">Purchase Orders Completed</dt>
                    <dd class="col-md-3">
                        @(Model.GanttData.PurchaseOrdersCompleted.HasValue ? Model.GanttData.PurchaseOrdersCompleted.Value.ToString("MMM dd, yyyy") : "N/A")
                    </dd>

                    @* <dt class="col-md-3">Purchase Orders Received</dt>
                    <dd class="col-md-3">
                        @(Model.GanttData.PurchaseOrdersReceived.HasValue ? Model.GanttData.PurchaseOrdersReceived.Value.ToString("MMM dd, yyyy") : "N/A")
                    </dd> *@

                    <dt class="col-md-3">Supplier PO Due</dt>
                    <dd class="col-md-3">
                        @(Model.GanttData.SupplierPODue.HasValue ? Model.GanttData.SupplierPODue.Value.ToString("MMM dd, yyyy") : "N/A")
                    </dd>

                    <dt class="col-md-3">Assembly Start</dt>
                    <dd class="col-md-3">
                        @(Model.GanttData.AssemblyStart.HasValue ? Model.GanttData.AssemblyStart.Value.ToString("MMM dd, yyyy") : "N/A")
                    </dd>

                    <dt class="col-md-3">Assembly Complete</dt>
                    <dd class="col-md-3">
                        @(Model.GanttData.AssemblyComplete.HasValue ? Model.GanttData.AssemblyComplete.Value.ToString("MMM dd, yyyy") : "N/A")
                    </dd>

                    <dt class="col-md-3">Shipping Expected</dt>
                    <dd class="col-md-3">
                        @(Model.GanttData.ShipExpected.HasValue ? Model.GanttData.ShipExpected.Value.ToString("MMM dd, yyyy") : "N/A")
                    </dd>

                    <dt class="col-md-3">Actual Shipping</dt>
                    <dd class="col-md-3">
                        @(Model.GanttData.ShipActual.HasValue ? Model.GanttData.ShipActual.Value.ToString("MMM dd, yyyy") : "N/A")
                    </dd>

                    <dt class="col-md-3">Delivery Expected</dt>
                    <dd class="col-md-3">
                        @(Model.GanttData.DeliveryExpected.HasValue ? Model.GanttData.DeliveryExpected.Value.ToString("MMM dd, yyyy") : "N/A")
                    </dd>

                    <dt class="col-md-3">Actual Delivery</dt>
                    <dd class="col-md-3">
                        @(Model.GanttData.DeliveryActual.HasValue ? Model.GanttData.DeliveryActual.Value.ToString("MMM dd, yyyy") : "N/A")
                    </dd>

            </dl>

            <p class="fw-bold" style="font-size:20px;">Notes</p>

            <div class="row">
                <div class="col-12">
                    <dl>
                    <dd class="mb-4">
                        @if (!string.IsNullOrEmpty(Model.GanttData.Notes))
                        {
                            @Html.Raw(Model.GanttData.Notes)
                        }
                        else
                        {
                            <span class="text-muted">No notes available</span>
                        }
                    </dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>
        <!-- Gantt Chart Legend -->
        <div class="mb-3">
            <div class="d-flex flex-wrap gap-3 align-items-center">
                <div class="d-flex align-items-center">
                    <div style="width: 20px; height: 20px; background-color: #FABF8F; border: 1px solid #ccc; margin-right: 5px;"></div>
                    <span>Engineering Released to Customer</span>
                </div>|
                <div class="d-flex align-items-center">
                    <div style="width: 20px; height: 20px; background-color: #E26B0A; border: 1px solid #ccc; margin-right: 5px;"></div>
                    <span>Customer Approval Received</span>
                </div>|
                <div class="d-flex align-items-center">
                    <div style="width: 20px; height: 20px; background-color: #ADF802; border: 1px solid #ccc; margin-right: 5px;"></div>
                    <span>Package Released to PIC/Spare Parts to CS</span>
                </div>|
                <div class="d-flex align-items-center">
                    <div style="width: 20px; height: 20px; background-color: #8DB4E2; border: 1px solid #ccc; margin-right: 5px;"></div>
                    <span>Purchase Orders Issued</span>
                </div>
                <div class="d-flex align-items-center">
                    <div style="width: 20px; height: 20px; background-color: #FF99CC; border: 1px solid #ccc; margin-right: 5px;"></div>
                    <span>Supplier PO Due</span>
                </div>|
                <div class="d-flex align-items-center">
                    <div style="width: 20px; height: 20px; background-color: #00B050; border: 1px solid #ccc; margin-right: 5px;"></div>
                    <span>Machine Assembly & Testing</span>
                </div>
            </div>
            <br />
            <p><b>*Gantt bars are clickable. Click to see milestone name and dates.*</b></p>
        </div>

        
    <!-- Gantt Chart Card -->
    <div class="info-container mt-4">
        <div class="info-box p-3 bg-light border rounded">
            <div class="card-header bg-success text-white mb-3">
                <h5 class="mb-0">Gantt Chart</h5>
            </div>
            <div id="gantt" style="min-width: 1000px; overflow-x: auto;"></div>
        </div>
    </div>
</div>

</div>
<br />
@section stylesheets {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/frappe-gantt/0.5.0/frappe-gantt.css">
    <style>

         @@media print {
        body * {
            visibility: hidden;
        }
       
        #printableArea, #printableArea * {
            visibility: visible;
        }

        #printableArea {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
        }

            

        .info-box dt {
            width: 30%;
            float: left;
            clear: both;
            margin-bottom: 0.5rem;
        }

        .info-box dd {
            width: 70%;
            float: left;
            margin-bottom: 0.5rem;
        }


        .procurement-table {
            width: 100% !important;
            font-size: 12px;
        }

        .section-header {
            font-size: 18px !important;
            margin: 15px 0;
        }

        .badge, .btn {
            display: none !important;
        }

        .bg-light, .bg-dark {
            background-color: #fff !important;
        }

        table {
            page-break-inside: auto !important;
        }

        tr {
            page-break-inside: avoid !important;
        }

     
    }

    td {
        cursor: default;
    }

        .card-header h5 {
            font-weight: 500;
        }

        .notes-content {
            white-space: pre-wrap;
            line-height: 1.6;
        }

        #gantt {
            min-width: 1000px;
        }

        dt {
            font-weight: 500;
            color: #666;
        }

        dd {
            margin-bottom: 0.5rem;
        }

        .bar-label {
            display: none !important;
        }

        .gantt .row {
            height: 20px !important; /* Adjust the height as needed */
        }
        /* Adjust SVG height */
        .gantt-container svg {
            height: 120px !important; /* Shrink empty space */
        }

       /*   .handle {
             display: none !important;
         } */
         /* Disable interaction with drag handles */
         /* .handle {
             pointer-events: none !important;
             display: none !important;
         }
 */
         /* Allow clicks on bars and labels */

         /* .bar, .bar-label{
          pointer-events: none !important; 
         cursor: not-allowed !important; 
}*/

        .bar {
            cursor: pointer;
            height: 24px;
        }



        .gantt-task-popup {
            position: absolute;
            background: rgba(0, 0, 0, 0.85);
            color: #fff;
            padding: 12px;
            border-radius: 8px;
            font-size: 12px;
            min-width: 300px; 
            max-width: 350px; 
            white-space: normal;
            word-wrap: break-word;
            box-shadow: 3px 3px 12px rgba(0, 0, 0, 0.3);
            z-index: 1000;
            transition: transform 0.2s ease-in-out, opacity 0.2s;
        }

            .gantt-task-popup::after {
                content: "";
                position: absolute;
                bottom: -10px;
                left: 50%;
                transform: translateX(-50%);
                border-width: 10px;
                border-style: solid;
                border-color: rgba(0, 0, 0, 0.85) transparent transparent transparent;
            }

        .handle {
            display: none;
        }
        .bar, .bar-progress, .bar-wrapper rect{
            rx:0 !important;
            ry: 0 !important;
            border-radius: 0 !important;
            shape-rendering: crispEdges !important;
        }


    </style>
}


@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/frappe-gantt/0.6.0/frappe-gantt.min.js"></script>
    <script>
    function printPrintableArea() {
        window.print();
    }
</script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var tasks = [
        @foreach (var task in Model.GanttTasks)
        {
            <text>
                        {
                            id: "@task.UniqueID",
                        name: "@task.MachineName",
                        start: "@(task.StartDate?.ToString("yyyy-MM-dd") ?? "")",
                        end: "@(task.EndDate?.ToString("yyyy-MM-dd") ?? "")",
                        progress: 0,
                        custom_class: "@task.MilestoneClass",
                        _row: 0  // Force all tasks into a single row
                                    },
            </text>
        }
                    ];

            var gantt = new Gantt("#gantt", tasks, {
                draggable:false, 
                can_move:false,
                can_resize: false,
                on_click: function (task) {
                    alert("Clicked on " + task.name);
                },
                on_date_change: function (task, start, end) {
                    console.log(task.name, start, end);
                },
                on_progress_change: function (task, progress) {
                    console.log(task.name, progress);
                },
                on_view_change: function (mode) {
                    console.log("View mode changed to " + mode);
                },
                view_mode: 'Week',
                language: 'en',
                custom_popup_html: function (task) {
                    return `<div class="gantt-task-popup">
                                        <strong>${task.name}</strong><br>
                                        <p style="font-size:13px;font-weight:bold;">${task.start} → ${task.end}</p>
                                    </div>`;
                }
            });

     


            // Manually adjust all task bars to align in the same row
            setTimeout(function () {
                const yOffset = 23; // Adjust to align all bars properly

                function applyYOffset(el, yOffset) {
                    const tag = el.tagName.toLowerCase();
                    if (tag === "rect" || tag === "polygon") {
                        if (tag === "rect") {
                            el.setAttribute("y", yOffset);
                        } else if (tag === "polygon") {
                            let points = el.getAttribute("points");
                            if (points) {
                                let updatedPoints = points
                                    .split(" ")
                                    .map(point => {
                                        let [x, y] = point.split(",").map(Number);
                                        return `${x},${y + yOffset}`;
                                    })
                                    .join(" ");
                                el.setAttribute("points", updatedPoints);
                            }
                        }
                    } else if (tag === "g") {
                        el.setAttribute("transform", `translate(0, ${yOffset})`);
                    } else {
                        el.style.transform = `translateY(${yOffset}px)`;
                    }
                }



                // Move all bars
                document.querySelectorAll(".bar").forEach(bar => {
                    applyYOffset(bar, yOffset);
                });

                // Move progress bars
                document.querySelectorAll(".bar-progress").forEach(progress => {
                    applyYOffset(progress, yOffset);
                });

                // Move bar labels
                document.querySelectorAll(".bar-label").forEach(label => {
                    applyYOffset(label, yOffset);
                });

                // Move parent summary bars (grey bars)
                document.querySelectorAll(".bar:not(.bar-progress)").forEach(parentBar => {
                    applyYOffset(parentBar, yOffset);
                });

                // Move bar wrappers
                document.querySelectorAll(".bar-wrapper").forEach(wrapper => {
                     // wrapper.style.pointerEvents = "none"; 
            wrapper.style.cursor = "default";
                    applyYOffset(wrapper, yOffset);
                });

                // Move drag handles (start and end of tasks)
                document.querySelectorAll(".handle").forEach(handle => {
                    applyYOffset(handle, yOffset);
                });

                // Move all task groups (which contain bars, progress, and handles)
                document.querySelectorAll("g.task").forEach(taskGroup => {
                    applyYOffset(taskGroup, yOffset);
                });

                // Adjust grid row heights
                document.querySelectorAll(".gantt .row").forEach(row => {
                    row.style.height = "40px";
                    row.style.display = "flex";
                    row.style.alignItems = "center";
                    row.style.borderBottom = "none";
                });

                // Adjust grid background heights
                document.querySelectorAll(".grid-row, .grid-background").forEach(grid => {
                    grid.style.height = "40px";
                });

                // Apply custom colors
                // Apply milestone-specific colors
                tasks.forEach((task) => {
                    let bars = document.querySelectorAll(`.bar-wrapper[data-id='${task.id}'] .bar`);
                    bars.forEach(bar => {
                        bar.style.fill = task.custom_class; // Use the color from the ViewModel
                    });
                });


                // Scroll to today's date
                showCurrentDay();

            }, 500);


            //so bars won't move
            setTimeout(() => {
                document.querySelectorAll(".bar").forEach(bar => {
                    bar.removeAttribute("data-start");
                    bar.removeAttribute("draggable");

                    bar.addEventListener("mousedown", event => {
                        if (!event.target.closest(".gantt-tooltip")) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                    }, true);

                    bar.addEventListener("mousemove", event => {
                        if (!event.target.closest(".gantt-tooltip")) {
                            event.stopPropagation();
                        }
                    }, true);

                    bar.addEventListener("mouseup", event => {
                        if (!event.target.closest(".gantt-tooltip")) {
                            event.stopPropagation();
                        }
                    }, true);

                    bar.addEventListener("click", function (event) {
                        if (!event.target.closest(".gantt-tooltip")) {
                            //event.stopPropagation();
                            console.log("Click ignored outside tooltip.");
                        } else {
                            console.log("Tooltip clicked.");
                        }
                    });
                });

                document.querySelectorAll(".handle").forEach(handle => {
                    handle.style.pointerEvents = "none";
                });

            }, 500);

            function showCurrentDay() {
                const currentDay = document.querySelector('.today-highlight');
                if (currentDay) {
                    currentDay.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });
                }
            }
        });

        gantt.options.bar_height = 20; // Reduce bar height to match row height
        gantt.refresh(); // Apply changes

    </script>

    <script type="text/javascript">
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>

    <script>
    const ganttModal = document.getElementById('confirmGanttModal');

    ganttModal.addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget;
        const actionType = button.getAttribute('data-action');
        const ganttId = button.getAttribute('data-id');

        const form = ganttModal.querySelector('#ganttActionForm');
        const idInput = ganttModal.querySelector('#ganttIdInput');
        const modalTitle = ganttModal.querySelector('#ganttModalLabel');
        const modalBody = ganttModal.querySelector('#ganttModalBody');
        const confirmBtn = ganttModal.querySelector('#ganttConfirmBtn');

        idInput.value = ganttId;

        if (actionType === 'finalize') {
            form.setAttribute('action', '/GanttData/FinalizeGantt'); // Replace with your actual controller route if needed
            modalTitle.textContent = "Confirm Finalization";
            modalBody.textContent = "Are you sure you want to finalize this Gantt Data/chart? Once finalized, it may be locked for edits.";
        } else {
            form.setAttribute('action', '/GanttData/UnfinalizeGantt'); // Replace with your actual controller route if needed
            modalTitle.textContent = "Confirm Unfinalization";
            modalBody.textContent = "Are you sure you want to unfinalize this Gantt Data/chart? This will allow further edits.";
        }
    });
</script>

}

