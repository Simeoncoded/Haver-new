@model haver.Models.GanttData

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>GanttData</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="MachineID" class="control-label"></label>
                <select asp-for="MachineID" class="form-control" asp-items="ViewBag.MachineID" id="MachineID">
                    <option value="">Select a Machine</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="AppDRcd" class="control-label"></label>
                <input asp-for="AppDRcd" class="form-control" id="AppDRcd" />
                <span asp-validation-for="AppDRcd" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EngExpected" class="control-label"></label>
                <input asp-for="EngExpected" class="form-control" id="EngExpected" />
                <span asp-validation-for="EngExpected" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EngReleased" class="control-label"></label>
                <input asp-for="EngReleased" class="form-control" id="EngReleased" />
                <span asp-validation-for="EngReleased" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CustomerApproval" class="control-label"></label>
                <input asp-for="CustomerApproval" class="form-control" id="CustomerApproval" />
                <span asp-validation-for="CustomerApproval" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PackageReleased" class="control-label"></label>
                <input asp-for="PackageReleased" class="form-control" id="PackageReleased" />
                <span asp-validation-for="PackageReleased" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PurchaseOrdersIssued" class="control-label"></label>
                <input asp-for="PurchaseOrdersIssued" class="form-control" id="PurchaseOrdersIssued" />
                <span asp-validation-for="PurchaseOrdersIssued" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PurchaseOrdersCompleted" class="control-label"></label>
                <input asp-for="PurchaseOrdersCompleted" class="form-control" id="PurchaseOrdersCompleted" />
                <span asp-validation-for="PurchaseOrdersCompleted" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SupplierPODue" class="control-label"></label>
                <input asp-for="SupplierPODue" class="form-control" id="SupplierPODue" />
                <span asp-validation-for="SupplierPODue" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="AssemblyStart" class="control-label"></label>
                <input asp-for="AssemblyStart" class="form-control" id="AssemblyStart" />
                <span asp-validation-for="AssemblyStart" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="AssemblyComplete" class="control-label"></label>
                <input asp-for="AssemblyComplete" class="form-control" id="AssemblyComplete" />
                <span asp-validation-for="AssemblyComplete" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ShipExpected" class="control-label"></label>
                <input asp-for="ShipExpected" class="form-control" id="ShipExpected" />
                <span asp-validation-for="ShipExpected" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ShipActual" class="control-label"></label>
                <input asp-for="ShipActual" class="form-control" id="ShipActual" />
                <span asp-validation-for="ShipActual" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DeliveryExpected" class="control-label"></label>
                <input asp-for="DeliveryExpected" class="form-control" id="DeliveryExpected" />
                <span asp-validation-for="DeliveryExpected" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DeliveryActual" class="control-label"></label>
                <input asp-for="DeliveryActual" class="form-control" id="DeliveryActual" />
                <span asp-validation-for="DeliveryActual" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Notes" class="control-label"></label>
                <textarea asp-for="Notes" class="form-control summernote"></textarea>
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>

    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Head {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.18/summernote-bs4.min.css" rel="stylesheet">


}

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
     $(document).ready(function () {
    // Trigger when MachineID is changed
    $('#MachineID').change(function () {
        var machineID = $(this).val();
        console.log('Selected MachineID: ', machineID); // Log the selected machineID

        if (machineID) {
            $.ajax({
                url: '@Url.Action("GetMachineData", "GanttData")' + '?machineID=' + machineID,
                type: 'GET',
                success: function (data) {
                    console.log(data); // Log the response data
                    if (data.success === false) {
                        alert(data.message); // Alert if no machine is found
                    } else {
                        // Populate the date fields with data returned from the server
                        $('#AppDRcd').val(data.AppDRcd);
                        $('#EngExpected').val(data.EngExpected);
                        $('#EngReleased').val(data.EngReleased);
                        $('#CustomerApproval').val(data.CustomerApproval);
                        $('#PackageReleased').val(data.PackageReleased);
                        $('#PurchaseOrdersIssued').val(data.PurchaseOrdersIssued);
                        $('#ShipExpected').val(data.ShipExpected);
                        $('#ShipActual').val(data.ShipActual);
                        $('#DeliveryExpected').val(data.DeliveryExpected);
                        $('#DeliveryActual').val(data.DeliveryActual);

                        // Auto calculate EngReleased date based on EngExpected
                        if (data.EngExpected) {
                            // Parse the EngExpected date
                            var engExpectedDate = new Date(data.EngExpected);
                            console.log("Parsed EngExpected Date: ", engExpectedDate);  // Log to check if it's valid

                            // Add 7 days to the EngExpected date (you can modify this duration as needed)
                            engExpectedDate.setDate(engExpectedDate.getDate() + 7); // Add 7 days
                            console.log("Calculated EngReleased Date: ", engExpectedDate);  // Log the calculated date

                            // Format the new date in yyyy-MM-dd format
                            var calculatedDate = engExpectedDate.toISOString().split('T')[0];
                            console.log("Formatted Date: ", calculatedDate);  // Log the formatted date

                            // Set the calculated EngReleased date
                            $('#EngReleased').val(calculatedDate);
                        }
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error: " + error);
                }
            });
        }
    });
});


    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.18/summernote-bs4.min.js"></script>
    <!-- Summernote JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.1/umd/popper.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.18/summernote-bs4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.summernote').summernote({
                height: 150, // Set height for the editor
                toolbar: [
                    ['style', ['bold', 'italic', 'underline', 'clear']], // Text styles
                    ['font', ['color']], // Add color picker for text and background colors
                    ['para', ['ul', 'ol', 'paragraph']], // List and paragraph options
                    ['insert', ['link', 'picture', 'video']], // Insert options
                    ['view', ['fullscreen', 'codeview', 'help']] // View options
                ],
                colors: [
                    // Define a full range of colors
                    ['#000000', '#424242', '#636363', '#9C9C94', '#CEC6CE', '#EFEFEF', '#F7F7F7', '#FFFFFF'],
                    ['#FF0000', '#FF9C00', '#FFFF00', '#00FF00', '#00FFFF', '#0000FF', '#9C00FF', '#FF00FF'],
                    ['#F4CCCC', '#FCE5CD', '#FFF2CC', '#D9EAD3', '#D0E0E3', '#C9DAF8', '#CFE2F3', '#D9D2E9'],
                    ['#EA9999', '#F9CB9C', '#FFE599', '#B6D7A8', '#A2C4C9', '#A4C2F4', '#9FC5E8', '#B4A7D6'],
                    ['#E06666', '#F6B26B', '#FFD966', '#93C47D', '#76A5AF', '#6D9EEB', '#6FA8DC', '#8E7CC3'],
                    ['#CC0000', '#E69138', '#F1C232', '#6AA84F', '#45818E', '#3C78D8', '#3D85C6', '#674EA7'],
                    ['#990000', '#B45F06', '#BF9000', '#38761D', '#134F5C', '#1155CC', '#0B5394', '#351C75'],
                    ['#660000', '#783F04', '#7F6000', '#274E13', '#0C343D', '#1C4587', '#073763', '#20124D']
                ] // Custom color palette
            });
        });
    </script>
    <script type="text/javascript">
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
}

