@model List<haver.ViewModels.GanttViewModel>

@{
    ViewData["Title"] = "Gantt Chart";
}

<h2>All Gantt Charts</h2>

<div class="container-fluid">
    <div class="row">
        <div class="col-3 col-lg-2 task-table-wrapper">
            <table class="table table-bordered">
                <thead class="table-light">
                    <tr>
                        <th>Order Number</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="d-flex justify-content-between align-items-center">
                                <span>@item.SalesOrder</span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>

        @* GANTT CHART DIV *@
        @*         ADDING A LOADER WHILE THE CHART IS BEING GENERATED HORIZONTALLY *@
        <div class="col-md-9 col-lg-10 gantt-chart-wrapper">
            <div id="gantt"></div> <!-- Remove display: none -->

        </div>
    </div>
</div>
@section stylesheets {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/frappe-gantt/0.5.0/frappe-gantt.css">

}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/frappe-gantt/0.5.0/frappe-gantt.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var tasks = [
        @foreach (var task in Model)
        {
            <text>
                        {
                         id: "@task.UniqueID", // Use UniqueID instead of ID
                        name: "@task.MachineName",
                        start: "@(task.StartDate?.ToString("yyyy-MM-dd") ?? "")",
                        end: "@(task.EndDate?.ToString("yyyy-MM-dd") ?? "")",
                        progress: 0,
                        custom_class: "@task.MilestoneClass",
                    
                        },
            </text>
        }
            ];

            var gantt = new Gantt("#gantt", tasks, {
                on_click: function (task) {
                    alert("Clicked on " + task.name);
                },
                on_date_change: function (task, start, end) {
                    console.log(task.name, start, end);
                },
                on_progress_change: function (task, progress) {
                    console.log(task.name, progress);
                },
                on_view_change: function (mode) {
                    console.log("View mode changed to " + mode);
                },
                view_mode: 'Week',
                language: 'en',
                custom_popup_html: function (task) {
                    return `<div class="gantt-task-popup">
                                <strong>${task.name}</strong><br>
                                <small>${task.start} → ${task.end}</small>
                            </div>`;
                }
            });

            // Apply colors AFTER rendering
            setTimeout(function () {
                tasks.forEach(task => {
                    let bars = document.querySelectorAll(`.bar-wrapper[data-id='${task.id}'] .bar`);
                    bars.forEach(bar => {
                        bar.style.fill = task.custom_class;
                    });
                });
            }, 500);
        });

    </script>
}




<style>
    .blue {
        fill: blue !important;
    }

    .yellow {
        fill: yellow !important;
    }

    .orange {
        fill: orange !important;
    }

    .purple {
        fill: purple !important;
    }

    .red {
        fill: red !important;
    }

    .brown {
        fill: brown !important;
    }

    .pink {
        fill: pink !important;
    }

    .cyan {
        fill: cyan !important;
    }

    .teal {
        fill: teal !important;
    }

    .lime {
        fill: lime !important;
    }

    .black {
        fill: black !important;
    }

    .gray {
        fill: gray !important;
    }

    .gantt-container {
        margin-left: -10px;
        margin-top: 0;
        padding: 10px 20px;
        padding-left: 30px;
        background-color: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
    }

    .task-table-wrapper {
        position: sticky;
        left: 0;
        top: 0;
        padding: 9px 0px;
        background-color: #f8f9fa;
        z-index: 10;
        overflow-y: hidden;
    }

        .task-table-wrapper table {
            border-collapse: collapse;
            width: 100%;
        }

        .task-table-wrapper th,
        .task-table-wrapper td {
            padding: 9px;
            text-align: left;
            border: 1px solid #f5f5f5;
            border-top: none;
            font-size: 12px;
            white-space: nowrap;
        }


        .task-table-wrapper tbody tr:nth-child(odd) {
            background-color: #ffffff;
        }

        .task-table-wrapper tbody tr:nth-child(even) {
            background-color: #f5f5f5;
        }

        .task-table-wrapper th {
            background-color: white !important;
            height: 45px;
            padding: 19px;
            font-size: 14px;
            position: sticky;
            top: 0;
            background-color: #f8f9fa;
            z-index: 11;
        }

    .gantt-chart-wrapper {
        overflow-x: auto;
        overflow-y: hidden;
        white-space: nowrap;
        flex-grow: 1;
        height: auto;
    }

    .gantt-chart {
        min-width: 200px;
    }

    .table > :not(:last-child) > :last-child > * {
        border-bottom-color: #ddd;
    }

    .button-link {
        appearance: none;
        background-color: #fafbfc;
        border: 1px solid rgba(27, 31, 35, 0.15);
        border-radius: 6px;
        box-shadow: rgba(27, 31, 35, 0.04) 0 1px 0, rgba(255, 255, 255, 0.25) 0 1px 0 inset;
        box-sizing: border-box;
        color: #24292e;
        cursor: pointer;
        display: inline-block;
        font-size: 14px;
        font-weight: 500;
        line-height: 20px;
        list-style: none;
        padding: 6px 16px;
        position: relative;
        transition: background-color 0.2s cubic-bezier(0.3, 0, 0.5, 1);
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
        vertical-align: middle;
        white-space: nowrap;
        word-wrap: break-word;
        text-decoration: none;
    }

        .button-link:hover {
            background-color: #f3f4f6;
            text-decoration: none;
            transition-duration: 0.1s;
        }

        .button-link:disabled {
            background-color: #fafbfc;
            border-color: rgba(27, 31, 35, 0.15);
            color: #959da5;
            cursor: default;
        }

        .button-link:active {
            background-color: #edeff2;
            box-shadow: rgba(225, 228, 232, 0.2) 0 1px 0 inset;
            transition: none 0s;
        }

        .button-link:focus {
            outline: 1px transparent;
        }

        .button-link:before {
            display: none;
        }

    .icon-link {
        appearance: none;
        background-color: #fafbfc;
        border-radius: 6px;
        box-shadow: rgba(27, 31, 35, 0.04) 0 1px 0, rgba(255, 255, 255, 0.25) 0 1px 0 inset;
        box-sizing: border-box;
        color: #24292e;
        cursor: pointer;
        display: inline-block;
        font-size: 9px;
        font-weight: 500;
        line-height: 10px;
        list-style: none;
        position: relative;
        transition: background-color 0.2s cubic-bezier(0.3, 0, 0.5, 1);
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
        vertical-align: middle;
        white-space: nowrap;
        word-wrap: break-word;
        text-decoration: none;
        padding: 0 5px;
    }
</style>