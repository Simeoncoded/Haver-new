@model IEnumerable<haver.Models.SalesOrder>

<partial name="_ViewHeading" />

<h1 class="text-center my-4" aria-label="Sales Order Index">Sales Orders</h1>

@{
    var message = TempData["Message"] as string;
}

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @message
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <a asp-action="Create" class="btn" aria-label="Create a new sales order" data-bs-toggle="tooltip" title="Create a new sales order">
        <i class="fa-solid fa-plus"></i> Create New @ViewData["ControllerFriendlyName"]
    </a>
</div>

<form asp-action="Index" method="get" aria-label="Sales Order filter form">
    <div class="form-horizontal">
        <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
        <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
        <button class="btn @ViewData["Filtering"] mb-3" type="button" data-bs-toggle="collapse" id="filterToggle" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter" aria-label="Toggle filter/search options" data-bs-toggle="tooltip" title="Filter/Search">
            <i class="fa-solid fa-filter"></i> Filter/Search @ViewData["numberFilters"]
        </button>
        <div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
            <div class="card card-body bg-light">
                <div class="row">
                    <div class="form-group col-md-4">
                        <label class="form-label fw-bold" for="CustomerID">Select by Customer:</label>
                        @Html.DropDownList("CustomerID", null, "All Customers", htmlAttributes: new { @class = "form-control", aria_label = "Select customer to filter orders" })
                    </div>
                    <div class="form-group col-md-4">
                        <label class="form-label fw-bold" for="SearchString">Search Order Number:</label>
                        @Html.TextBox("SearchString", null, new { @class = "form-control", placeholder = "Enter Order Number", aria_label = "Enter order number to search" })
                    </div>
                    <div class="form-group col-md-4 align-self-end">
                        <input type="submit" name="actionButton" value="Filter" class="btn btn-outline-primary" aria-label="Apply filter" data-bs-toggle="tooltip" title="Apply filter" />
                        <a asp-action="Index" class="btn btn-outline-secondary" aria-label="Clear filter" data-bs-toggle="tooltip" title="Clear filter">Clear</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <table class="table table-striped table-bordered table-hover shadow-sm">
        <thead class="bg-dark text-white text-center">
            <tr>
                @foreach (var field in new[] { "Order Number", "Order Date", "AppDwgRcd", "DwgIsDt", "Customer" , "Engineer"})
                {
                    <th class="align-middle">
                        <button class="btn btn-link text-white p-0 fw-bold text-decoration-none" type="submit" name="actionButton" value="@field" aria-label="Sort by @field" data-bs-toggle="tooltip" title="Sort by @field">
                            @field
                            @if (ViewData["sortField"]?.ToString() == field)
                            {
                                <i class="fa-solid @(ViewData["sortDirection"]?.ToString() == "asc" ? "fa-arrow-up" : "fa-arrow-down")"></i>
                            }
                        </button>
                    </th>
                }
                <th>Status</th>
                <th class="align-middle">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.OrderNumber)</td>
                    <td>@Html.DisplayFor(modelItem => item.SummaryDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.AppDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.DwgDte)</td>
                    <td>@Html.DisplayFor(modelItem => item.Customer.CompanyName)</td>
                    <td>
                        @{
                            int specCount = item.SalesOrderEngineers.Count;
                            if (specCount > 0)
                            {
                                string firstSpec = item.SalesOrderEngineers.FirstOrDefault().Engineer.EngineerInitials;
                                if (specCount > 1)
                                {
                                    string specList = "";//Html string of specialty names separated by <br /> tags
                                    var s = item.SalesOrderEngineers.ToList();
                                    for (int i = 1; i < specCount; i++)//Skip the first because we have it already
                                    {
                                        specList += s[i].Engineer.EngineerInitials + " <br />";
                                    }
                                    <a class="" role="button" data-bs-toggle="collapse" href="#collapseSpecalty@(item.ID)"
                                       aria-expanded="false" aria-controls="collapseSpecalty@(item.ID)">
                                        @firstSpec <span class="badge bg-info">@specCount</span>
                                    </a>
                                    <div class="collapse" id="collapseSpecalty@(item.ID)">
                                        @Html.Raw(specList)
                                    </div>
                                }
                                else
                                {
                                    @firstSpec
                                }
                            }
                        }
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Status)</td>
                
                    <td class="text-center">
                        @if (item.Status == Status.Draft)
                        {
                            <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-sm mx-1" aria-label="Continue sales order @item.OrderNumber"
                            data-bs-toggle="tooltip" title="Continue">Continue</a>
                        }
                        else
                        {
                            <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-sm mx-1"
                               aria-label="Edit sales order @item.OrderNumber" data-bs-toggle="tooltip" title="Edit sales order">
                                <i class="fa-solid fa-pen-to-square"></i> Edit
                            </a>
                            <a asp-controller="SalesOrderProcurement" asp-action="Index" asp-route-SalesOrderID="@item.ID"
                               class="btn btn-sm mx-1 text-white" aria-label="View details of sales order" data-bs-toggle="tooltip" title="View details">
                                <i class="fa-solid fa-circle-info"></i> Details
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-sm mx-1"
                               aria-label="Delete sales order @item.OrderNumber" data-bs-toggle="tooltip" title="Delete sales order">
                                <i class="fa-solid fa-delete-left"></i> Delete
                            </a>
                        }
                    </td>

                </tr>
            }
        </tbody>
    </table>
    <partial name="_PagingNavBar" />
</form>

@section Scripts {
    <script type="text/javascript">
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
}

<style>
    .align-middle button {
        background: none;
        outline: none;
    }
</style>
