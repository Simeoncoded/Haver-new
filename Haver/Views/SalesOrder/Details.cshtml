@model haver.Models.SalesOrder

@if (TempData["Message"] != null)
{
    <div id="autoDismissAlert" class="alert alert-success alert-dismissible fade show mb-4" role="alert">
        <i class="fas fa-check-circle"></i>
        @TempData["Message"]

        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>


}

<partial name="_addMachine" model="new haver.Models.Machine()" />





<div class="text-end mb-3">
    @if (Model?.Status == Status.Completed)
    {
        <span class="badge bg-success">Completed</span>
        <a asp-action="Index" class="ms-3 btn btn-sm"><i class="fa fa-arrow-left" aria-hidden="true"></i> Back to List</a>
        <button href="#" onclick="printPrintableArea()" return false;" class="ms-3 btn btn-sm "> <i class="fa-solid fa-print"></i> Print</button>
    }
    else
    {
        @if (User.IsInRole("Admin") || User.IsInRole("Sales"))
        {
            @if (Model?.Status != Status.Archived)
            {
                <a asp-action="Edit" asp-route-id="@Model?.ID" class="ms-3 btn btn-sm"><i class="fa-solid fa-pen-to-square"></i> Edit</a>
            }

            <a asp-action="Index" class="ms-3 btn btn-sm"><i class="fa fa-arrow-left" aria-hidden="true"></i> Back to List</a>

            @if (Model?.Status != Status.Completed && Model?.Status != Status.Archived)
            {
                <a asp-action="Complete" asp-controller="SalesOrder" asp-route-id="@Model?.ID" class="btn btn-sm ms-3" onclick="return confirm('Are you sure you want to mark this sales order as completed?');">
                    <i class="fa fa-check" aria-hidden="true"></i>  Mark as Completed
                </a>
            }

        }
        <a asp-action="Index" class="ms-3 btn btn-sm"><i class="fa fa-arrow-left" aria-hidden="true"></i> Back to List</a>
        <button href="#" onclick="printPrintableArea()" return false;" class="ms-3 btn btn-sm "> <i class="fa-solid fa-print"></i> Print</button>

    }
</div>

<div id="printableArea">


    <div class="info-container mb-4">
        <div class="info-box p-3 bg-light border rounded mb-3">
            <dl class="row">
                <dt class="col-md-3">
                    @Html.DisplayNameFor(model => model.IsDraft)
                </dt>
                <dd class="col-md-3">
                    @Html.DisplayFor(model => model.IsDraft)
                </dd>
                <dt class="col-md-3 text-dark">Order Number</dt>
                <dd class="col-md-3">@Html.DisplayFor(model => model.OrderNumber)</dd>

                <dt class="col-md-3 text-dark">Sales Order Date</dt>
                <dd class="col-md-3">@Html.DisplayFor(model => model.SoDate)</dd>

                <dt class="col-md-3 text-dark">Price</dt>
                <dd class="col-md-3">@Html.DisplayFor(model => model.allprice)</dd>

                <dt class="col-md-3 text-dark">Approval Drawing Expected</dt>
                <dd class="col-md-3">@Html.DisplayFor(model => model.AppDwgExp)</dd>

                <dt class="col-md-3 text-dark">Approval Drawing Released</dt>
                <dd class="col-md-3">@Html.DisplayFor(model => model.AppDwgRel)</dd>

                <dt class="col-md-3 text-dark">Approval Drawing Returned</dt>
                <dd class="col-md-3">@Html.DisplayFor(model => model.AppDwgRet)</dd>

                <dt class="col-md-3 text-dark">Pre-Order Expected</dt>
                <dd class="col-md-3">@Html.DisplayFor(model => model.PreOExp)</dd>

                <dt class="col-md-3 text-dark">Pre-Order Released</dt>
                <dd class="col-md-3">@Html.DisplayFor(model => model.PreORel)</dd>

                <dt class="col-md-3 text-dark">Engineering Package Expected</dt>
                <dd class="col-md-3">@Html.DisplayFor(model => model.EngPExp)</dd>

                <dt class="col-md-3 text-dark">Engineering Package Release</dt>
                <dd class="col-md-3">@Html.DisplayFor(model => model.EngPRel)</dd>

                <dt class="col-md-3 text-dark">Customer</dt>
                <dd class="col-md-3">@Html.DisplayFor(model => model.CompanyName)</dd>

                <dt class="col-md-3 text-dark">Engineers</dt>
                <dd class="col-md-3">
                    @{
                        int specCount = Model.SalesOrderEngineers.Count;
                        if (specCount > 0)
                        {
                            string firstSpec = Model.SalesOrderEngineers.FirstOrDefault().Engineer.EngineerInitialsB;
                            if (specCount > 1)
                            {
                                string specList = "";
                                var s = Model.SalesOrderEngineers.ToList();
                                for (int i = 1; i < specCount; i++)
                                {
                                    specList += s[i].Engineer.EngineerInitialsB + " <br />";
                                }
                                <a class="engineer-list text-info" role="button" data-bs-toggle="collapse" href="#collapseSpecalty@(Model.ID)" aria-expanded="false" aria-controls="collapseSpecalty@(Model.ID)">
                                    @firstSpec <span class="badge bg-info">@specCount</span>
                                </a>
                                <div class="collapse" id="collapseSpecalty@(Model.ID)">
                                    @Html.Raw(specList)
                                </div>
                            }
                            else
                            {
                                @firstSpec
                            }
                        }
                        else
                        {
                            <span class="text-muted">None assigned to this Sales Order</span>
                        }
                    }
                </dd>

                <dt class="col-md-3 text-dark">Shipping Terms</dt>
                <dd class="col-md-3">@Html.DisplayFor(model => model.ShippingTerms)</dd>

                <dt class="col-md-3 text-dark">Comments</dt>
                <dd class="col-md-3">@Html.Raw(Model.Comments)</dd>


            </dl>


             <dl class="row opts">
            <dt class="col-md-2">@Html.DisplayNameFor(model => Model.Media)</dt>
            <dd class="col-md-2">@Html.DisplayFor(model => Model.Media)</dd>

            <dt class="col-md-2">@Html.DisplayNameFor(model => Model.SpareParts)</dt>
            <dd class="col-md-2">@Html.DisplayFor(model => Model.SpareParts)</dd>

            <dt class="col-md-2">@Html.DisplayNameFor(model => Model.SparePMedia)</dt>
            <dd class="col-md-2">@Html.DisplayFor(model => Model.SparePMedia)</dd>

            <dt class="col-md-2">@Html.DisplayNameFor(model => Model.CoatingLining)</dt>
            <dd class="col-md-2">@Html.DisplayFor(model => Model.CoatingLining)</dd>

            <dt class="col-md-2">@Html.DisplayNameFor(model => Model.Base)</dt>
            <dd class="col-md-2">@Html.DisplayFor(model => Model.Base)</dd>

            <dt class="col-md-2">@Html.DisplayNameFor(model => Model.AirSeal)</dt>
            <dd class="col-md-2">@Html.DisplayFor(model => Model.AirSeal)</dd>

            <dt class="col-md-2">@Html.DisplayNameFor(model => Model.Disassembly)</dt>
            <dd class="col-md-2">@Html.DisplayFor(model => Model.Disassembly)</dd>
        
        </dl>
        </div>

        <div>
         
             @if (User.IsInRole("Admin") || User.IsInRole("Sales") || User.IsInRole("Engineering") || User.IsInRole("Production") || User.IsInRole("PIC"))
                            {

                @if (Model?.Status != Status.Archived && Model?.Status != Status.Completed && Model?.IsDraft == false)
                {
                    <button type="button" class="btn btn-outline-secondary"
                            data-bs-toggle="modal"
                            data-bs-target="#addMachineModal"
                            data-salesorderid="@Model?.ID">
                        &#x2795; Add Machine
                    </button>
                }


                            }

        </div>

        @if (Model?.Machines != null && Model.Machines.Any())
        {
            <div>
                <h4 class="section-header" id="machinesContainer" style="text-align:center;font-weight:bold;">
                    Machines and Procurement Information
                </h4>
                <table class="table table-striped table-bordered table-hover shadow-sm procurement-table">
                    <thead class="bg-dark text-white text-center">
                        <tr>
                            <th data-bs-toggle="tooltip" title="Machine Type and Serial Number">Machine Type & Serial Number</th>
                            <th data-bs-toggle="tooltip" title="Vendor supplying the machine parts">Vendor</th>
                            <th data-bs-toggle="tooltip" title="Purchase Order Number">PO Number</th>
                            <th data-bs-toggle="tooltip" title="Official PO Due Date">PO Due Date</th>
                            <th data-bs-toggle="tooltip" title="Date PO was received">PO Received Date</th>
                            <th data-bs-toggle="tooltip" title="Is Quality Completed">Quality Completed</th>
                            <th data-bs-toggle="tooltip" title="NCR Raised">NCR Raised</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var machine in Model.Machines)
                        {
                            bool hasProcurements = machine.Procurements != null && machine.Procurements.Any();
                            bool firstRow = true;

                            if (hasProcurements)
                            {
                                foreach (var procurement in machine.Procurements)
                                {
                                    <tr>
                                        @if (firstRow)
                                        {
                                            <td rowspan="@machine.Procurements.Count">
                                                <a href="@Url.Action("Index", "MachineProcurement", new { MachineID = machine.ID })" target="_blank"
                                                   data-bs-toggle="tooltip" title="Click here to view all information about this machine">
                                                    @Html.DisplayFor(m => machine.Description)
                                                </a>
                                            </td>
                                            firstRow = false;
                                        }

                                        <td data-bs-toggle="tooltip" title="Vendor: @procurement.Vendor.Name">@Html.DisplayFor(m => procurement.Vendor.Name)</td>
                                        <td data-bs-toggle="tooltip" title="PO Number: @procurement.PONumber">@Html.DisplayFor(m => procurement.PONumber)</td>
                                        <td data-bs-toggle="tooltip" title="PO Due Date: @procurement.PODueDate">@Html.DisplayFor(m => procurement.PODueDate)</td>
                                        <td data-bs-toggle="tooltip" title="Received on: @procurement.PORcd">@Html.DisplayFor(m => procurement.PORcd)</td>
                                        <td data-bs-toggle="tooltip" title="Quality Completed">@Html.DisplayFor(m => procurement.QualityICom)</td>
                                        <td data-bs-toggle="tooltip" title="NCR Raised">@Html.DisplayFor(m => procurement.NcrRaised)</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td>
                                        <a href="@Url.Action("Index", "MachineProcurement", new { MachineID = machine.ID })" target="_blank"
                                           data-bs-toggle="tooltip" title="Click here to view all information about this machine">
                                            @Html.DisplayFor(m => machine.Description)
                                        </a>
                                    </td>
                                    <td colspan="7" class="text-center text-muted" data-bs-toggle="tooltip" title="No procurement details available">
                                        No Procurement Details
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <p class="text-center text-muted">No machines added to this sales order yet.</p>
        }

    </div>

</div>
@section Scripts {
    @{
        @await Html.PartialAsync("_ValidationScriptsPartial")
    }
<script type="text/javascript">
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>
<script>
    function printPrintableArea() {
        window.print();
    }

</script>
<script>
    $('#submitMachineCreate').click(function (event) {
        event.preventDefault();
        ClearErrors();

        $.ajax({
            type: "POST",
            url: $('#createMachineForm').attr('action'),
            data: $('#createMachineForm').serialize(),
            success: function (response) {
                if (response.success) {
                    // Hide the modal
                    $('#addMachineModal').modal('hide');
                    $('body').removeClass('modal-open');
                    $('.modal-backdrop').remove();

                    // Redirect to the SalesOrder detail page
                    window.location.href = response.redirectUrl;
                }
                else {
                    error: function (xhr) {
                        var errorMessages = [];
                        switch (xhr.status) {
                            case 401:
                                errorMessages.push("You must be logged in first.");
                                break;
                            case 403:
                                errorMessages.push("You are not authorized for this action.");
                                break;
                            default:
                                errorMessages = xhr.responseText.split("|").slice(0, -1);
                        }
                        if (!errorMessages.some((str) => str !== "")) {
                            errorMessages.push("Error: Unable to complete operation");
                        }
                        var ul = document.getElementById("ErrorList");
                        for (var i = 0; i < errorMessages.length; i++) {
                            var li = document.createElement("li");
                            li.innerHTML = errorMessages[i];
                            ul.appendChild(li);
                        }
                    }
                }
            },
        });
    });

</script>

    <script>
        $('#addMachineModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var salesOrderId = button.data('salesorderid');

            var modal = $(this);
            modal.find('#SalesOrderID').val(salesOrderId);
            modal.find('select[name="SalesOrderID"]').val(salesOrderId).change();
        });
    </script>

}

<style>
    @@media print {
        body * {
            visibility: hidden;
        }

       
       
        #printableArea, #printableArea * {
            visibility: visible;
        }

        #printableArea {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
        }

        .info-box dt {
            width: 30%;
            float: left;
            clear: both;
            margin-bottom: 0.5rem;
        }

        .info-box dd {
            width: 70%;
            float: left;
            margin-bottom: 0.5rem;
        }

        .opts {
            display: flex;
            flex-wrap: wrap;
            gap: 10px; /* Add space between items */
        }

            .opts dt, .opts dd {
                display: inline-block;
                width: auto;
                margin-right: 15px; /* Adjust spacing */
            }

                .opts dt::after {
                    content: ":"; /* Add a colon after labels */
                    margin-right: 5px;
                }
        .procurement-table {
            width: 100% !important;
            font-size: 12px;
        }

        .section-header {
            font-size: 18px !important;
            margin: 15px 0;
        }

        .badge, .btn {
            display: none !important;
        }

        .bg-light, .bg-dark {
            background-color: #fff !important;
        }

        table {
            page-break-inside: auto !important;
        }

        tr {
            page-break-inside: avoid !important;
        }

     
    }

    td {
        cursor: default;
    }
</style>

