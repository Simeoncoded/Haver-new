@model IEnumerable<haver.Models.GanttTask>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.SalesOrder)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Notes)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.SalesOrder.CompanyName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Notes)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<div id="gantt"></div> <!-- Match the selector in JS -->

@section stylesheets {
    @* stylesheet for Gantt charts *@
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/frappe-gantt/0.6.1/frappe-gantt.css" />
}

@section Scripts {
    @* Script for Gantt charts *@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/frappe-gantt/0.6.1/frappe-gantt.min.js"></script>


    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Fetch tasks from the correct endpoint
            fetch('/GanttTask/GetGanttData')
                .then(response => {
                    if (!response.ok) throw new Error('Failed to load tasks');
                    return response.json();
                })
                .then(data => {
                    // Map data to Gantt-compatible format
                    const tasks = data.map(task => ({
                        id: task.id.toString(),
                        name: task.name,
                        start: task.start,
                        end: task.end,
                        progress: task.progress,
                        dependencies: task.dependencies || ""
                    }));

                    // Initialize Gantt chart
                    const gantt = new Gantt("#gantt", tasks, {
                        on_click: task => console.log("Task clicked:", task),
                        on_date_change: (task, start, end) => {
                            updateTask(
                                task.id,
                                start.toISOString().split('T')[0], // Format as YYYY-MM-DD
                                end.toISOString().split('T')[0],
                                task.progress
                            );
                        },
                        on_progress_change: (task, progress) => {
                            updateTask(task.id, task.start, task.end, progress);
                        },
                        view_mode: 'Week',
                        language: 'en'
                    });
                })
                .catch(error => console.error('Error:', error));

            // Update task function
            function updateTask(id, start, end, progress) {
                fetch('/GanttTask/UpdateTask', {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({
                        id: parseInt(id), // Ensure ID is numeric
                        startDate: start,
                        endDate: end,
                        progress: progress
                    })
                })
                    .then(response => {
                        if (!response.ok) throw new Error('Update failed');
                        console.log("Task updated successfully.");
                    })
                    .catch(error => console.error("Error updating task:", error));
            }
        });
    </script>

}