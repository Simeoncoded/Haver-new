@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@*For Cookies*@
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var userName = HttpContextAccessor.HttpContext.Request.Cookies["userName"] ?? UserManager.GetUserName(User);
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle text-light d-flex align-items-center" href="#" id="navbarIDDropdown" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fa-solid fa-user"> <span style="font-family:'Avenir', sans-serif;font-size:15px;" >       @userName </span></i>
            </a>

            <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="navbarIDDropdown">
                <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Change Security Settings</a></li>
                <li><hr class="dropdown-divider bg-light"></li>
                @* <li><a class="dropdown-item" asp-area="" asp-controller="EmployeeAccount" asp-action="Details">Manage Account</a></li> *@
                <li>
                    <form class="dropdown-item p-0" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button type="submit" class="dropdown-item text-danger">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

